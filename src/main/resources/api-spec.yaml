openapi: 3.0.1
info:
  title: FruitsEcommerce API
  description: API for managing user authentication and roles for an eCommerce platform.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/auth
    description: Local development server

paths:
  /register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request, validation errors
        '409':
          description: User already exists

  /login:
    post:
      summary: Login a user and generate JWT token
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful, returns JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials

components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - username
        - password
        - email
        - role
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          format: password
          example: P@ssw0rd
        email:
          type: string
          format: email
          example: johndoe@example.com
        role:
          type: string
          enum: [VISITOR, CLIENT, ADMIN]
          example: CLIENT

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          format: password
          example: P@ssw0rd

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lIiwiaWF0IjoxNTk2Mj..."
        type:
          type: string
          example: "Bearer"
        expiresIn:
          type: integer
          example: 86400

securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
